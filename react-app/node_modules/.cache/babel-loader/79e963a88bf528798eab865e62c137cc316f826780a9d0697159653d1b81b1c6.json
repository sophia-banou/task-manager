{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/TaskList.css';\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\nimport TaskEditPopup from './EditPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    filteredTasks,\n    toggleTaskCompletion,\n    tasks,\n    filter,\n    isSidebarOpen\n  } = useTaskContext();\n  const [editingPopup, setEditingPopup] = useState(null);\n\n  // Filter tasks based on their completion status\n  const completedTasks = filteredTasks.filter(task => task.completed);\n  const incompleteTasks = filteredTasks.filter(task => !task.completed);\n  const handleEditClick = task => {\n    setEditingPopup(task);\n  };\n  const handleClosePopup = () => {\n    setEditingPopup(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main-div ${isSidebarOpen ? 'shifted' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-tasks-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-tasks-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nt-title\",\n            style: {\n              fontSize: '40px'\n            },\n            children: \"No Tasks Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '30px'\n            },\n            children: \"It looks like you don't have any tasks yet. Create your first task to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"illustration.png\",\n          alt: \"Illustration\",\n          className: \"illustration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-div\",\n      children: [(filter === 'All' || filter === 'Incomplete') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Incomplete Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: incompleteTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n            task: task,\n            onCheckboxChange: toggleTaskCompletion,\n            onEditClick: handleEditClick\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), (filter === 'All' || filter === 'Complete') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n            task: task,\n            onCheckboxChange: toggleTaskCompletion,\n            onEditClick: handleEditClick\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), editingPopup && /*#__PURE__*/_jsxDEV(TaskEditPopup, {\n        task: editingPopup,\n        onClose: handleClosePopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"AOJt/kNfqPJrTyG5i1TLVS0OFE0=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskListItem","useTaskContext","TaskEditPopup","jsxDEV","_jsxDEV","TaskList","_s","filteredTasks","toggleTaskCompletion","tasks","filter","isSidebarOpen","editingPopup","setEditingPopup","completedTasks","task","completed","incompleteTasks","handleEditClick","handleClosePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","fontSize","src","alt","map","onCheckboxChange","onEditClick","id","onClose","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/TaskList.css';\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\nimport TaskEditPopup from './EditPopup';\n\nconst TaskList = () => {\n    const { filteredTasks, toggleTaskCompletion, tasks,filter, isSidebarOpen } = useTaskContext();\n    const [editingPopup, setEditingPopup] = useState(null);\n\n    // Filter tasks based on their completion status\n    const completedTasks = filteredTasks.filter(task => task.completed);\n    const incompleteTasks = filteredTasks.filter(task => !task.completed);\n\n\n\n    const handleEditClick = (task) => {\n        setEditingPopup(task);\n    };\n\n    const handleClosePopup = () => {\n        setEditingPopup(null);\n    };\n\n    return (\n        <div className={`main-div ${isSidebarOpen ? 'shifted' : ''}`}>\n            <div className=\"title-div\">\n                <h2 className='title'>Tasks</h2>\n            </div>\n            {tasks.length === 0 ? (\n                <div className='no-tasks-div'>\n                    <div className=\"no-tasks\">\n                        <div className='no-tasks-text'>\n                            <span className='nt-title' style={{fontSize: '40px'}}>No Tasks Available</span>\n                            <p style={{fontSize: '30px'}}>It looks like you don't have any tasks yet. Create your first task to get started!</p>\n                        </div>\n                        <img src=\"illustration.png\" alt=\"Illustration\" className='illustration'></img>\n                    </div>\n                </div>\n            ) : (\n                <div className='tasks-div'>\n                    {(filter === 'All' || filter === 'Incomplete') && (\n                        <div className=\"tasks-container\">\n                            <div className=\"tasks-header\">\n                                <h2>Incomplete Tasks</h2>\n                            </div>\n                            <ul className=\"tasks-list\">\n                                {incompleteTasks.map(task => (\n                                    <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} onEditClick={handleEditClick} />\n                                ))}\n                            </ul>\n                        </div>\n                    )}\n\n                    {(filter === 'All' || filter === 'Complete') && (\n                        <div className=\"tasks-container\">\n                            <div className=\"tasks-header\">\n                                <h2>Completed Tasks</h2>\n                            </div>\n                            <ul className=\"tasks-list\">\n                                {completedTasks.map(task => (\n                                    <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} onEditClick={handleEditClick} />\n                                ))}\n                            </ul>\n                        </div>\n                    )}\n                    {\n                        editingPopup && (\n                            <TaskEditPopup\n                                task={editingPopup}\n                                onClose={handleClosePopup}\n                            />\n                        )\n                    }\n                </div>\n\n            )}\n        </div>\n       \n    );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}