{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/test1/task-manager/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/TaskList.css';\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    filteredTasks,\n    setTasks,\n    toggleTaskCompletion\n  } = useTaskContext();\n  const completedTasks = filteredTasks.filter(task => task.completed);\n  const incompleteTasks = filteredTasks.filter(task => !task.completed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Incomplete Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: incompleteTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n            task: task,\n            onCheckboxChange: toggleTaskCompletion\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tasks-list\",\n          children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n            task: task,\n            onCheckboxChange: toggleTaskCompletion\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"vWFbP34cl4a6FfHto4dEcHG9QWQ=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskListItem","useTaskContext","jsxDEV","_jsxDEV","TaskList","_s","filteredTasks","setTasks","toggleTaskCompletion","completedTasks","filter","task","completed","incompleteTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onCheckboxChange","id","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/test1/task-manager/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../css/TaskList.css'\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\n\nconst TaskList = () => {\n\n    const { filteredTasks, setTasks, toggleTaskCompletion } = useTaskContext();\n\n\n    const completedTasks = filteredTasks.filter(task => task.completed);\n    const incompleteTasks = filteredTasks.filter(task => !task.completed);\n\n\n    return (\n        <div className=\"main-div\">\n            <div className=\"title-div\">\n                <h2 className='title'>Tasks</h2>\n            </div>\n            <div className='tasks-div'>\n                <div className=\"tasks-container\">\n                    <div className=\"tasks-header\">\n                        <h2>Incomplete Tasks</h2>\n                    </div>\n                    <ul className=\"tasks-list\">\n                        {incompleteTasks.map(task => (\n                            <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} />\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"tasks-container\">\n                    <div className=\"tasks-header\">\n                        <h2>Completed Tasks</h2>\n                    </div>\n                    <ul className=\"tasks-list\">\n                        {completedTasks.map(task => (\n                            <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} />\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}