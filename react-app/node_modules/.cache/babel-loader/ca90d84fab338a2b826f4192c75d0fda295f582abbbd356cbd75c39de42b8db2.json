{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/SecondaryHeader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/SecondaryHeader.css';\nimport TaskPopup from \"./AddPopup\";\nimport { useTaskContext } from '../TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecondaryHeader = () => {\n  _s();\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const {\n    setIsSidebarOpen,\n    isSidebarOpen\n  } = useTaskContext();\n  const handleOpenPopup = () => {\n    setIsPopupOpen(true);\n  };\n  const handleClosePopup = () => {\n    setIsPopupOpen(false);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `secondary-header ${isSidebarOpen ? 'shifted' : ''}`,\n      children: [isSidebarOpen && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"sidebar-close.png\",\n        className: \"toggle-sidebar\",\n        onClick: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }, this), !isSidebarOpen && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"sidebar-open.png\",\n        className: \"toggle-sidebar\",\n        onClick: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task\",\n        onClick: handleOpenPopup,\n        children: [\"Add Task\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"add.png\",\n          alt: \"Add Icon\",\n          className: \"add-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(TaskPopup, {\n      onClose: handleClosePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(SecondaryHeader, \"DqEB86tBgFrMGgJK3lBuf0uUCJg=\", false, function () {\n  return [useTaskContext];\n});\n_c = SecondaryHeader;\nexport default SecondaryHeader;\nvar _c;\n$RefreshReg$(_c, \"SecondaryHeader\");","map":{"version":3,"names":["React","useState","TaskPopup","useTaskContext","jsxDEV","_jsxDEV","SecondaryHeader","_s","isPopupOpen","setIsPopupOpen","setIsSidebarOpen","isSidebarOpen","handleOpenPopup","handleClosePopup","toggleSidebar","prevState","children","className","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClose","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/SecondaryHeader.js"],"sourcesContent":["import React, { useState } from 'react'\nimport '../css/SecondaryHeader.css'\nimport TaskPopup from \"./AddPopup\";\nimport { useTaskContext } from '../TaskContext';\n\nconst SecondaryHeader = () => {\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n    const { setIsSidebarOpen , isSidebarOpen} = useTaskContext();\n\n    const handleOpenPopup = () => {\n        setIsPopupOpen(true);\n    };\n\n    const handleClosePopup = () => {\n        setIsPopupOpen(false);\n    };\n\n    const toggleSidebar = () => {\n        setIsSidebarOpen(prevState => !prevState);\n    };\n\n    return (\n        <div>\n        <div className={`secondary-header ${isSidebarOpen ? 'shifted' : ''}`}>\n            {isSidebarOpen && <img src=\"sidebar-close.png\" className=\"toggle-sidebar\" onClick ={toggleSidebar}/>}\n            {!isSidebarOpen && <img src=\"sidebar-open.png\" className=\"toggle-sidebar\" onClick ={toggleSidebar}/>}\n            <button className=\"add-task\" onClick={handleOpenPopup}>\n                Add Task\n                <img src=\"add.png\" alt=\"Add Icon\" className='add-icon' />\n            </button>\n            </div>\n            {isPopupOpen && <TaskPopup onClose={handleClosePopup} />}\n        </div>\n    );\n\n}\n\nexport default SecondaryHeader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM;IAAES,gBAAgB;IAAGC;EAAa,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE5D,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC1BH,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IACxBJ,gBAAgB,CAACK,SAAS,IAAI,CAACA,SAAS,CAAC;EAC7C,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACAX,OAAA;MAAKY,SAAS,EAAE,oBAAoBN,aAAa,GAAG,SAAS,GAAG,EAAE,EAAG;MAAAK,QAAA,GAChEL,aAAa,iBAAIN,OAAA;QAAKa,GAAG,EAAC,mBAAmB;QAACD,SAAS,EAAC,gBAAgB;QAACE,OAAO,EAAGL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACnG,CAACZ,aAAa,iBAAIN,OAAA;QAAKa,GAAG,EAAC,kBAAkB;QAACD,SAAS,EAAC,gBAAgB;QAACE,OAAO,EAAGL;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACpGlB,OAAA;QAAQY,SAAS,EAAC,UAAU;QAACE,OAAO,EAAEP,eAAgB;QAAAI,QAAA,GAAC,UAEnD,eAAAX,OAAA;UAAKa,GAAG,EAAC,SAAS;UAACM,GAAG,EAAC,UAAU;UAACP,SAAS,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLf,WAAW,iBAAIH,OAAA,CAACH,SAAS;MAACuB,OAAO,EAAEZ;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAGd,CAAC;AAAAhB,EAAA,CA9BKD,eAAe;EAAA,QAE2BH,cAAc;AAAA;AAAAuB,EAAA,GAFxDpB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}