{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/Sidebar.css';\nimport { useTaskContext } from '../TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideBar = () => {\n  _s();\n  const {\n    filter,\n    setFilter,\n    isSidebarOpen,\n    tasks\n  } = useTaskContext();\n  const handleFilterClick = selectedFilter => {\n    setFilter(selectedFilter);\n  };\n  const [taskCounts, setTaskCounts] = useState({\n    all: 0,\n    completed: 0,\n    incomplete: 0\n  });\n  useEffect(() => {\n    const allCount = tasks.length;\n    const completedCount = tasks.filter(task => task.completed).length;\n    const incompleteCount = tasks.filter(task => !task.completed).length;\n    setTaskCounts({\n      all: allCount,\n      completed: completedCount,\n      incomplete: incompleteCount\n    });\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isSidebarOpen ? 'open' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-filters\",\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'All' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('All'),\n        children: [\"All\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: [taskCounts.all, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'Incomplete' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('Incomplete'),\n        children: [\"Incomplete\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: [taskCounts.incomplete, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'Complete' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('Complete'),\n        children: [\"Complete\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"filter-count\",\n          children: [taskCounts.completed, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(SideBar, \"3cMO/EG+Zfhcu5G5RVfDwAls1Nc=\", false, function () {\n  return [useTaskContext];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","useState","useEffect","useTaskContext","jsxDEV","_jsxDEV","SideBar","_s","filter","setFilter","isSidebarOpen","tasks","handleFilterClick","selectedFilter","taskCounts","setTaskCounts","all","completed","incomplete","allCount","length","completedCount","task","incompleteCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/Sidebar.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport '../css/Sidebar.css'\nimport {useTaskContext} from '../TaskContext';\n\nconst SideBar = () => {\n    const { filter, setFilter, isSidebarOpen, tasks} = useTaskContext();\n\n    const handleFilterClick = (selectedFilter) => {\n        setFilter(selectedFilter);\n    };\n\n    const [taskCounts, setTaskCounts] = useState({\n        all: 0,\n        completed: 0,\n        incomplete: 0,\n    });\n\n    useEffect(() => {\n        const allCount = tasks.length;\n        const completedCount = tasks.filter(task => task.completed).length;\n        const incompleteCount = tasks.filter(task => !task.completed).length;\n\n        setTaskCounts({\n            all: allCount,\n            completed: completedCount,\n            incomplete: incompleteCount,\n        });\n    }, [tasks]);\n\n    return (\n        <div className={`sidebar ${isSidebarOpen ? 'open' : ''}`}>\n            <div className='filters'>\n                <div className='head-filters'>Filters</div>\n                <div className={`filter ${filter === 'All' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('All')}>\n                    All\n                    <span className='filter-count'>{taskCounts.all} </span>\n                </div>\n                <div\n                    className={`filter ${filter === 'Incomplete' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('Incomplete')}> \n                    Incomplete\n                    <span className='filter-count'>{taskCounts.incomplete} </span>\n                </div>\n                <div\n                    className={`filter ${filter === 'Complete' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('Complete')}>\n                    Complete\n                    <span className='filter-count'>{taskCounts.completed} </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SideBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}