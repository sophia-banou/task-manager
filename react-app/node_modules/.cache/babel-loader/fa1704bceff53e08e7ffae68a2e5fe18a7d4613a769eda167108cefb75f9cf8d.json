{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/test1/task-manager/src/components/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport '../css/Sidebar.css';\nimport useTaskContext from '../TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideBar = () => {\n  _s();\n  const {\n    filter,\n    setFilter\n  } = useTaskContext();\n  const handleFilterClick = selectedFilter => {\n    setFilter(selectedFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"sidebar\",\n    id: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-filters\",\n        children: \"Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'All' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('All'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'Incomplete' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('Incomplete'),\n        children: \" Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `filter ${filter === 'Complete' ? 'active' : ''}`,\n        onClick: () => handleFilterClick('Complete'),\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(SideBar, \"KAXvdB4L+NJXWrCf9saCcibn560=\", false, function () {\n  return [useTaskContext];\n});\n_c = SideBar;\nexport default SideBar;\nvar _c;\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"names":["React","useContext","useTaskContext","jsxDEV","_jsxDEV","SideBar","_s","filter","setFilter","handleFilterClick","selectedFilter","class","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/test1/task-manager/src/components/Sidebar.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport '../css/Sidebar.css'\nimport useTaskContext from '../TaskContext';\n\nconst SideBar = () => {\n    const { filter, setFilter } = useTaskContext();\n\n    const handleFilterClick = (selectedFilter) => {\n        setFilter(selectedFilter);\n    };\n\n    return (\n        <div class=\"sidebar\" id=\"sidebar\">\n            <div className='filters'>\n                <div className='head-filters'>Filters</div>\n                <div className={`filter ${filter === 'All' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('All')}>\n                    All\n                </div>\n                <div\n                    className={`filter ${filter === 'Incomplete' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('Incomplete')}\n                > Incomplete</div>\n                <div\n                    className={`filter ${filter === 'Complete' ? 'active' : ''}`}\n                    onClick={() => handleFilterClick('Complete')}\n                >Complete</div>\n            </div>\n        </div>\n    );\n};\n\nexport default SideBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,oBAAoB;AAC3B,OAAOC,cAAc,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGN,cAAc,CAAC,CAAC;EAE9C,MAAMO,iBAAiB,GAAIC,cAAc,IAAK;IAC1CF,SAAS,CAACE,cAAc,CAAC;EAC7B,CAAC;EAED,oBACIN,OAAA;IAAKO,KAAK,EAAC,SAAS;IAACC,EAAE,EAAC,SAAS;IAAAC,QAAA,eAC7BT,OAAA;MAAKU,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACpBT,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Cd,OAAA;QAAKU,SAAS,EAAE,UAAUP,MAAM,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzDY,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,KAAK,CAAE;QAAAI,QAAA,EAAC;MAE7C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNd,OAAA;QACIU,SAAS,EAAE,UAAUP,MAAM,KAAK,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC/DY,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,YAAY,CAAE;QAAAI,QAAA,EAClD;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClBd,OAAA;QACIU,SAAS,EAAE,UAAUP,MAAM,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC7DY,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAAC,UAAU,CAAE;QAAAI,QAAA,EAChD;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACZ,EAAA,CA1BID,OAAO;EAAA,QACqBH,cAAc;AAAA;AAAAkB,EAAA,GAD1Cf,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}