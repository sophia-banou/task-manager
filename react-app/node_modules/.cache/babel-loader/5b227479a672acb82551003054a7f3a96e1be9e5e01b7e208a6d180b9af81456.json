{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/AddPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/AddPopup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPopup = ({\n  onClose\n}) => {\n  _s();\n  const {\n    setTasks,\n    tasks\n  } = useTaskContext();\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n\n  //Hook that adds the new task to the previous ones\n  const addTask = task => {\n    setTasks(tasks => [...tasks, task]);\n    console.log(tasks);\n  };\n  const handleAddTask = () => {\n    //Prevents adding tasks without a title\n    if (!taskTitle.trim()) return;\n    const newTask = {\n      id: Date.now(),\n      title: taskTitle,\n      description: taskDescription,\n      completed: false\n    };\n    addTask(newTask);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-popup-close\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"close.png\",\n            alt: \"Close Icon\",\n            className: \"close-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task title e.g. walk the dog\",\n          value: taskTitle,\n          onChange: e => setTaskTitle(e.target.value),\n          className: \"input-title\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-middle\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Task description (optional)\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value),\n          className: \"description\",\n          maxLength: \"487\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-bot\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          disabled: !taskTitle.trim(),\n          className: \"add-button\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPopup, \"yNgdFKz4fLHOwYoCNAb6LG2eZvg=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskPopup;\nexport default TaskPopup;\nvar _c;\n$RefreshReg$(_c, \"TaskPopup\");","map":{"version":3,"names":["React","useState","useTaskContext","jsxDEV","_jsxDEV","TaskPopup","onClose","_s","setTasks","tasks","taskTitle","setTaskTitle","taskDescription","setTaskDescription","addTask","task","console","log","handleAddTask","trim","newTask","id","Date","now","title","description","completed","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","autoFocus","maxLength","disabled","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/AddPopup.js"],"sourcesContent":["import React, { useState} from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/AddPopup.css'; \n\nconst TaskPopup = ({ onClose }) => {\n    const {setTasks, tasks} = useTaskContext();\n    const [taskTitle, setTaskTitle] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n\n    //Hook that adds the new task to the previous ones\n    const addTask = (task) => {\n        setTasks(tasks => [...tasks, task]);\n        console.log(tasks);\n    };\n\n    const handleAddTask = () => {\n        //Prevents adding tasks without a title\n        if (!taskTitle.trim()) return; \n\n        const newTask = {\n            id: Date.now(),\n            title: taskTitle,\n            description: taskDescription,\n            completed: false\n        };\n\n        addTask(newTask);\n        onClose(); \n    };\n    \n\n    return (\n        <div className=\"task-popup-overlay\">\n            <div className=\"task-popup-content\">\n                <div className=\"popup-top\">\n                    <div className=\"task-popup-close\" onClick={onClose}>\n                        <img src=\"close.png\" alt=\"Close Icon\" className=\"close-button\"></img>\n                    </div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Task title e.g. walk the dog\"\n                        value={taskTitle}\n                        onChange={(e) => setTaskTitle(e.target.value)}\n                        className='input-title'\n                        autoFocus\n                    />\n                </div>\n                <div className=\"popup-middle\">\n                <textarea\n                    type=\"text\"\n                    placeholder=\"Task description (optional)\"\n                    value={taskDescription}\n                    onChange={(e) => setTaskDescription(e.target.value)}\n                    className='description'\n                    maxLength=\"487\"\n                />\n                </div>\n                <div className=\"popup-bot\">\n                <button onClick={handleAddTask} disabled={!taskTitle.trim()} className='add-button'>Add Task</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}