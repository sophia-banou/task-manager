{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/TaskContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nexport const TaskProvider = props => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('All');\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'All') return true;\n    if (filter === 'Incomplete') return !task.completed;\n    if (filter === 'Complete') return task.completed;\n    return false;\n  });\n  const toggleTaskCompletion = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const value = {\n    tasks,\n    setTasks,\n    filter,\n    setFilter,\n    filteredTasks,\n    toggleTaskCompletion\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskProvider, \"+GEBb8Dn8HNdv/AFlCVkadhGfys=\");\n_c = TaskProvider;\nexport const useTaskContext = () => {\n  _s2();\n  return useContext(TaskContext);\n};\n_s2(useTaskContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","TaskContext","TaskProvider","props","_s","tasks","setTasks","filter","setFilter","filteredTasks","task","completed","toggleTaskCompletion","id","map","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTaskContext","_s2","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/TaskContext.js"],"sourcesContent":["import React, { createContext, useState, useContext} from 'react';\n\n\nconst TaskContext = createContext();\n\nexport const TaskProvider = props => {\n    const [tasks, setTasks] = useState([]);\n    const [filter, setFilter] = useState('All');\n\n    const filteredTasks = tasks.filter(task => {\n        if (filter === 'All') return true;\n        if (filter === 'Incomplete') return !task.completed;\n        if (filter === 'Complete') return task.completed;\n        return false;\n    });\n\n\n    const toggleTaskCompletion = (id) => {\n        setTasks(tasks.map(task =>\n            task.id === id ? { ...task, completed: !task.completed } : task\n        ));\n    };\n\n    const value = {\n        tasks,\n        setTasks,\n        filter,\n        setFilter,\n        filteredTasks,\n\n        toggleTaskCompletion,\n    };\n    \n    return (\n        <TaskContext.Provider value={value}>\n            {props.children}\n        </TaskContext.Provider>\n    );\n};\n\nexport const useTaskContext = () => useContext(TaskContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMY,aAAa,GAAGJ,KAAK,CAACE,MAAM,CAACG,IAAI,IAAI;IACvC,IAAIH,MAAM,KAAK,KAAK,EAAE,OAAO,IAAI;IACjC,IAAIA,MAAM,KAAK,YAAY,EAAE,OAAO,CAACG,IAAI,CAACC,SAAS;IACnD,IAAIJ,MAAM,KAAK,UAAU,EAAE,OAAOG,IAAI,CAACC,SAAS;IAChD,OAAO,KAAK;EAChB,CAAC,CAAC;EAGF,MAAMC,oBAAoB,GAAIC,EAAE,IAAK;IACjCP,QAAQ,CAACD,KAAK,CAACS,GAAG,CAACJ,IAAI,IACnBA,IAAI,CAACG,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGH,IAAI;MAAEC,SAAS,EAAE,CAACD,IAAI,CAACC;IAAU,CAAC,GAAGD,IAC/D,CAAC,CAAC;EACN,CAAC;EAED,MAAMK,KAAK,GAAG;IACVV,KAAK;IACLC,QAAQ;IACRC,MAAM;IACNC,SAAS;IACTC,aAAa;IAEbG;EACJ,CAAC;EAED,oBACIZ,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAC9Bd,KAAK,CAACc;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAACjB,EAAA,CAjCWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAmCzB,OAAO,MAAMqB,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACG,WAAW,CAAC;AAAA;AAACuB,GAAA,CAA/CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}