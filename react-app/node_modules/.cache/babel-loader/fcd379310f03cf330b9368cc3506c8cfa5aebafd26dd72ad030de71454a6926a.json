{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/test1/task-manager/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/TaskList.css';\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\nimport TaskEditPopup from './EditPopup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    filteredTasks,\n    toggleTaskCompletion,\n    filter\n  } = useTaskContext();\n  const [editingTask, setEditingTask] = useState(null);\n\n  // Filter tasks based on their completion status\n  const completedTasks = filteredTasks.filter(task => task.completed);\n  const incompleteTasks = filteredTasks.filter(task => !task.completed);\n  const handleEditClick = task => {\n    setEditingTask(task);\n  };\n  const handleClosePopup = () => {\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-div\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-div\",\n      children: filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-tasks\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Tasks Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"It looks like you don't have any tasks yet. Add some tasks to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [(filter === 'All' || filter === 'Incomplete') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Incomplete Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"tasks-list\",\n            children: incompleteTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n              task: task,\n              onCheckboxChange: toggleTaskCompletion,\n              onEditClick: handleEditClick\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), (filter === 'All' || filter === 'Complete') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tasks-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Completed Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"tasks-list\",\n            children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskListItem, {\n              task: task,\n              onCheckboxChange: toggleTaskCompletion,\n              onEditClick: handleEditClick\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), editingTask && /*#__PURE__*/_jsxDEV(TaskEditPopup, {\n      task: editingTask,\n      onClose: handleClosePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"B6/igCfI7YvvM97A1oY4O/conDQ=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskListItem","useTaskContext","TaskEditPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_s","filteredTasks","toggleTaskCompletion","filter","editingTask","setEditingTask","completedTasks","task","completed","incompleteTasks","handleEditClick","handleClosePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onCheckboxChange","onEditClick","id","onClose","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/test1/task-manager/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/TaskList.css';\nimport TaskListItem from './TaskListItem';\nimport { useTaskContext } from '../TaskContext'; // Ensure correct path\nimport TaskEditPopup from './EditPopup';\n\nconst TaskList = () => {\n    const { filteredTasks, toggleTaskCompletion, filter } = useTaskContext();\n    const [editingTask, setEditingTask] = useState(null);\n\n    // Filter tasks based on their completion status\n    const completedTasks = filteredTasks.filter(task => task.completed);\n    const incompleteTasks = filteredTasks.filter(task => !task.completed);\n\n    const handleEditClick = (task) => {\n        setEditingTask(task);\n    };\n\n    const handleClosePopup = () => {\n        setEditingTask(null);\n    };\n\n    return (\n        <div className=\"main-div\">\n            <div className=\"title-div\">\n                <h2 className='title'>Tasks</h2>\n            </div>\n            <div className='tasks-div'>\n                {filteredTasks.length === 0 ? (\n                    <div className=\"no-tasks\">\n                        <h2>No Tasks Available</h2>\n                        <p>It looks like you don't have any tasks yet. Add some tasks to get started!</p>\n                    </div>\n                ) : (\n                    <>\n                        {/* Conditionally render the incomplete tasks section */}\n                        {(filter === 'All' || filter === 'Incomplete') && (\n                            <div className=\"tasks-container\">\n                                <div className=\"tasks-header\">\n                                    <h2>Incomplete Tasks</h2>\n                                </div>\n                                <ul className=\"tasks-list\">\n                                    {incompleteTasks.map(task => (\n                                        <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} onEditClick={handleEditClick} />\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                        {/* Conditionally render the completed tasks section */}\n                        {(filter === 'All' || filter === 'Complete') && (\n                            <div className=\"tasks-container\">\n                                <div className=\"tasks-header\">\n                                    <h2>Completed Tasks</h2>\n                                </div>\n                                <ul className=\"tasks-list\">\n                                    {completedTasks.map(task => (\n                                        <TaskListItem key={task.id} task={task} onCheckboxChange={toggleTaskCompletion} onEditClick={handleEditClick} />\n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n            {editingTask && (\n                <TaskEditPopup\n                    task={editingTask}\n                    onClose={handleClosePopup}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}