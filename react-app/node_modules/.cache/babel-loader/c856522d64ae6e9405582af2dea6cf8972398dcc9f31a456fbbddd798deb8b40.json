{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/test1/task-manager/src/components/EditPopup.js\",\n  _s = $RefreshSig$();\n// TaskEditPopup.js\nimport React, { useState, useEffect } from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/EditPopup.css'; // Create this CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskEditPopup = ({\n  task,\n  onClose\n}) => {\n  _s();\n  const {\n    setTasks\n  } = useTaskContext();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  useEffect(() => {\n    setTitle(task.title);\n    setDescription(task.description);\n  }, [task]);\n  const handleSave = () => {\n    setTasks(prevTasks => prevTasks.map(t => t.id === task.id ? {\n      ...t,\n      title,\n      description\n    } : t));\n    onClose(); // Close the popup after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"task-popup-close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Task title\",\n        className: \"task-edit-title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Task description\",\n        className: \"task-edit-description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"task-edit-save-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskEditPopup, \"fzky6+FlQtnsMST/LlyuIB66nkM=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskEditPopup;\nexport default TaskEditPopup;\nvar _c;\n$RefreshReg$(_c, \"TaskEditPopup\");","map":{"version":3,"names":["React","useState","useEffect","useTaskContext","jsxDEV","_jsxDEV","TaskEditPopup","task","onClose","_s","setTasks","title","setTitle","description","setDescription","handleSave","prevTasks","map","t","id","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/test1/task-manager/src/components/EditPopup.js"],"sourcesContent":["// TaskEditPopup.js\nimport React, { useState, useEffect } from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/EditPopup.css'; // Create this CSS file for styling\n\nconst TaskEditPopup = ({ task, onClose }) => {\n    const { setTasks } = useTaskContext();\n    const [title, setTitle] = useState(task.title);\n    const [description, setDescription] = useState(task.description);\n\n    useEffect(() => {\n        setTitle(task.title);\n        setDescription(task.description);\n    }, [task]);\n\n    const handleSave = () => {\n        setTasks(prevTasks => prevTasks.map(t =>\n            t.id === task.id ? { ...t, title, description } : t\n        ));\n        onClose(); // Close the popup after saving\n    };\n\n    return (\n        <div className=\"task-popup-overlay\">\n            <div className=\"task-popup-content\">\n                <button className=\"task-popup-close\" onClick={onClose}>Ã—</button>\n                <h2>Edit Task</h2>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"Task title\"\n                    className=\"task-edit-title\"\n                />\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Task description\"\n                    className=\"task-edit-description\"\n                />\n                <button onClick={handleSave} className=\"task-edit-save-button\">Save</button>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskEditPopup;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EACrC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACM,IAAI,CAACI,KAAK,CAAC;EAC9C,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACM,IAAI,CAACM,WAAW,CAAC;EAEhEX,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACL,IAAI,CAACI,KAAK,CAAC;IACpBG,cAAc,CAACP,IAAI,CAACM,WAAW,CAAC;EACpC,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrBL,QAAQ,CAACM,SAAS,IAAIA,SAAS,CAACC,GAAG,CAACC,CAAC,IACjCA,CAAC,CAACC,EAAE,KAAKZ,IAAI,CAACY,EAAE,GAAG;MAAE,GAAGD,CAAC;MAAEP,KAAK;MAAEE;IAAY,CAAC,GAAGK,CACtD,CAAC,CAAC;IACFV,OAAO,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,oBACIH,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC/BhB,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BhB,OAAA;QAAQe,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEd,OAAQ;QAAAa,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjErB,OAAA;QAAAgB,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBrB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,KAAM;QACbkB,QAAQ,EAAGC,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC,YAAY;QACxBZ,SAAS,EAAC;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFrB,OAAA;QACIuB,KAAK,EAAEf,WAAY;QACnBgB,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAChDI,WAAW,EAAC,kBAAkB;QAC9BZ,SAAS,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFrB,OAAA;QAAQiB,OAAO,EAAEP,UAAW;QAACK,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjB,EAAA,CAvCIH,aAAa;EAAA,QACMH,cAAc;AAAA;AAAA8B,EAAA,GADjC3B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}