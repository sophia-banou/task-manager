{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/EditPopup.js\",\n  _s = $RefreshSig$();\n// TaskEditPopup.js\nimport React, { useState } from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/EditPopup.css'; // Make sure this CSS file is created\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskEditPopup = ({\n  task,\n  onClose\n}) => {\n  _s();\n  const {\n    setTasks\n  } = useTaskContext();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const [completed, setCompleted] = useState(task.completed);\n  const handleDelete = () => {\n    setTasks(tasks => tasks.filter(t => t.id !== task.id));\n    onClose(); // Close the popup after deleting\n  };\n  const handleSave = () => {\n    setTasks(tasks => tasks.map(t => t.id === task.id ? {\n      ...t,\n      title,\n      description,\n      completed\n    } : t));\n    onClose(); // Close the popup after saving\n  };\n  const handleCheckboxChange = () => {\n    setCompleted(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-popup-close\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"close.png\",\n            alt: \"Close Icon\",\n            className: \"close-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: completed,\n            onChange: handleCheckboxChange,\n            className: \"task-popup-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Task title e.g. walk the dog\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            className: \"input-title2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-middle\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Task description (optional)\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          className: \"description\",\n          maxLength: \"360\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-bot2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"delete.png\",\n            onClick: handleDelete,\n            alt: \"Delete Icon\",\n            className: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          disabled: !title.trim(),\n          className: \"add-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskEditPopup, \"5E+jG4KPzFhN4wWp8IZmcTZxz1s=\", false, function () {\n  return [useTaskContext];\n});\n_c = TaskEditPopup;\nexport default TaskEditPopup;\nvar _c;\n$RefreshReg$(_c, \"TaskEditPopup\");","map":{"version":3,"names":["React","useState","useTaskContext","jsxDEV","_jsxDEV","TaskEditPopup","task","onClose","_s","setTasks","title","setTitle","description","setDescription","completed","setCompleted","handleDelete","tasks","filter","t","id","handleSave","map","handleCheckboxChange","prev","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","placeholder","value","e","target","maxLength","disabled","trim","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code-2/task-manager/react-app/src/components/EditPopup.js"],"sourcesContent":["// TaskEditPopup.js\nimport React, { useState} from 'react';\nimport { useTaskContext } from '../TaskContext';\nimport '../css/EditPopup.css'; // Make sure this CSS file is created\n\nconst TaskEditPopup = ({ task, onClose }) => {\n    const { setTasks } = useTaskContext();\n    const [title, setTitle] = useState(task.title);\n    const [description, setDescription] = useState(task.description);\n    const [completed, setCompleted] = useState(task.completed);\n\n    const handleDelete = () => {\n        setTasks(tasks => tasks.filter(t => t.id !== task.id));\n        onClose(); // Close the popup after deleting\n    };\n\n    const handleSave = () => {\n        setTasks(tasks => tasks.map(t =>\n            t.id === task.id ? { ...t, title, description, completed } : t\n        ));\n        onClose(); // Close the popup after saving\n    };\n\n    const handleCheckboxChange = () => {\n        setCompleted(prev => !prev);\n    };\n\n    return (\n        <div className=\"task-popup-overlay\">\n            <div className=\"task-popup-content\">\n                <div className=\"popup-top\">\n                    <div className=\"task-popup-close\" onClick={onClose}>\n                        <img src=\"close.png\" alt=\"Close Icon\" className=\"close-button\" />\n                    </div>\n                    <div className='input-div'>\n                        <input\n                            type=\"checkbox\"\n                            checked={completed}\n                            onChange={handleCheckboxChange}\n                            className=\"task-popup-checkbox\"\n                        />\n                        <input\n                            type=\"text\"\n                            placeholder=\"Task title e.g. walk the dog\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            className='input-title2'\n                        />\n                    </div>\n                </div>\n                <div className=\"popup-middle\">\n                    <textarea\n                        placeholder=\"Task description (optional)\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        className='description'\n                        maxLength=\"360\"\n                    />\n                </div>\n                <div className=\"popup-bot2\">\n                    <button  className='delete-button'>\n                        <img  src=\"delete.png\" onClick={handleDelete} alt=\"Delete Icon\" className=\"delete-icon\" />\n                    </button>\n                    <button onClick={handleSave} disabled={!title.trim()} className='add-button'>Save</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TaskEditPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}