{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/test1/task-manager/src/components/SecondaryHeader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../css/SecondaryHeader.css';\nimport { useTaskContext } from '../TaskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecondaryHeader = () => {\n  _s();\n  const {\n    addTask\n  } = useTaskContext();\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n  const [popupVisible, setPopupVisible] = useState(false);\n  const handleAddTask = () => {\n    if (!taskTitle.trim()) return; // Prevent adding tasks without a title\n\n    const newTask = {\n      id: Date.now(),\n      title: taskTitle,\n      description: taskDescription,\n      completed: false\n    };\n    addTask(newTask);\n    setTaskTitle('');\n    setTaskDescription('');\n    setPopupVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"secondary-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task\",\n      onClick: () => setPopupVisible(true),\n      children: [\"Add Task\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"add.png\",\n        alt: \"Add Icon\",\n        className: \"add-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-popup-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: taskTitle,\n          onChange: e => setTaskTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPopupVisible(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(SecondaryHeader, \"P/58WqUswlP4DI/hYgjcjrHv2/k=\", false, function () {\n  return [useTaskContext];\n});\n_c = SecondaryHeader;\nexport default SecondaryHeader;\nvar _c;\n$RefreshReg$(_c, \"SecondaryHeader\");","map":{"version":3,"names":["React","useState","useTaskContext","jsxDEV","_jsxDEV","SecondaryHeader","_s","addTask","taskTitle","setTaskTitle","taskDescription","setTaskDescription","popupVisible","setPopupVisible","handleAddTask","trim","newTask","id","Date","now","title","description","completed","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/test1/task-manager/src/components/SecondaryHeader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../css/SecondaryHeader.css';\nimport { useTaskContext } from '../TaskContext';\n\nconst SecondaryHeader = () => {\n    const { addTask } = useTaskContext();\n    const [taskTitle, setTaskTitle] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [popupVisible, setPopupVisible] = useState(false);\n\n    const handleAddTask = () => {\n        if (!taskTitle.trim()) return; // Prevent adding tasks without a title\n\n        const newTask = {\n            id: Date.now(),\n            title: taskTitle,\n            description: taskDescription,\n            completed: false\n        };\n        addTask(newTask);\n        setTaskTitle('');\n        setTaskDescription('');\n        setPopupVisible(false);\n    };\n\n    return (\n        <div className=\"secondary-header\">\n            <button className=\"add-task\" onClick={() => setPopupVisible(true)}>\n                Add Task\n                <img src=\"add.png\" alt=\"Add Icon\" className='add-icon' />\n            </button>\n\n            {/* Popup Overlay and Content */}\n            {popupVisible && (\n                <div className=\"task-popup-overlay\">\n                    <div className=\"task-popup-content\">\n                        <h3>Add New Task</h3>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            value={taskTitle}\n                            onChange={(e) => setTaskTitle(e.target.value)}\n                        />\n                        <textarea\n                            placeholder=\"Description\"\n                            value={taskDescription}\n                            onChange={(e) => setTaskDescription(e.target.value)}\n                        />\n                        <button onClick={handleAddTask}>Add Task</button>\n                        <button onClick={() => setPopupVisible(false)}>Cancel</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SecondaryHeader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AACnC,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAQ,CAAC,GAAGL,cAAc,CAAC,CAAC;EACpC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMa,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;;IAE/B,MAAMC,OAAO,GAAG;MACZC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,KAAK,EAAEZ,SAAS;MAChBa,WAAW,EAAEX,eAAe;MAC5BY,SAAS,EAAE;IACf,CAAC;IACDf,OAAO,CAACS,OAAO,CAAC;IAChBP,YAAY,CAAC,EAAE,CAAC;IAChBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,eAAe,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACIT,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAQmB,SAAS,EAAC,UAAU;MAACE,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,IAAI,CAAE;MAAAW,QAAA,GAAC,UAE/D,eAAApB,OAAA;QAAKsB,GAAG,EAAC,SAAS;QAACC,GAAG,EAAC,UAAU;QAACJ,SAAS,EAAC;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,EAGRnB,YAAY,iBACTR,OAAA;MAAKmB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/BpB,OAAA;QAAKmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BpB,OAAA;UAAAoB,QAAA,EAAI;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB3B,OAAA;UACI4B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAE1B,SAAU;UACjB2B,QAAQ,EAAGC,CAAC,IAAK3B,YAAY,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACF3B,OAAA;UACI6B,WAAW,EAAC,aAAa;UACzBC,KAAK,EAAExB,eAAgB;UACvByB,QAAQ,EAAGC,CAAC,IAAKzB,kBAAkB,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACF3B,OAAA;UAAQqB,OAAO,EAAEX,aAAc;UAAAU,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjD3B,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,KAAK,CAAE;UAAAW,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACzB,EAAA,CAnDID,eAAe;EAAA,QACGH,cAAc;AAAA;AAAAoC,EAAA,GADhCjC,eAAe;AAqDrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}